{"FolderName": "esl", "TestName": "adjectives", "TestID": "6e5dfbbd-df99-4b8d-ad9a-2961393c69fe", "UserInput": "How much is the green salad?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "303b6e06-f064-4ea5-8ce0-af05408810a3", "UserInput": "Give my son a salad, please", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "_please_a_1(i26,def_explicit_q(x10,pronoun_q(x16,pron(x16),[_son_n_of(x10,i21), poss(e15,x10,x16)]),_a_q(x9,_salad_n_1(x9),pronoun_q(x3,pron(x3),_give_v_1(e2,x3,x9,x10)))))"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "05b678f9-1b6a-423d-9880-9da106b7a165", "UserInput": "No", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "c9ec4dad-55bc-4a0e-b6e9-8b0f4509850a", "UserInput": "I have roast chicken", "InteractionResponse": "you do not have chicken\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "udef_q(x14,_roast_n_1(x14),pronoun_q(x3,pron(x3),udef_q(x8,[_chicken_n_1(x8), compound(e13,x8,x14)],_have_v_1(e2,x3,x8))))"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "b3ac7119-4e10-4a6f-80ee-66e9bbf9a4f4", "UserInput": "how much is the green salad?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "d189a743-e47c-409d-86e6-130647d194c6", "UserInput": "how much is the tomato soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "59291b86-c54a-4f8b-b8da-d380d7fed0e4", "UserInput": "I want a green dish and a tomato dish, please!", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nSon: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "_please_a_1(i33,udef_q(x9,_a_q(x14,[_dish_n_of(x14,i19), _green_a_2(e18,x14)],_a_q(x21,udef_q(x27,_tomato_n_1(x27),[_dish_n_of(x21,i32), compound(e26,x21,x27)]),_and_c(x9,x14,x21))),pronoun_q(x3,pron(x3),_want_v_1(e2,x3,x9))))"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "b5596cde-1097-4c46-9101-bb5534463c3b", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: What can I get you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "53adcedd-3198-4849-a66b-5d44ff7f04f5", "UserInput": "I have a green salad", "InteractionResponse": "you do not have a green salad\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_a_q(x8,[_salad_n_1(x8), _green_a_2(e13,x8)],_have_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "adjectives", "TestID": "20232d68-23ea-4832-b9e0-3404f288d7a3", "UserInput": "I have a tomato soup", "InteractionResponse": "you do not have a soup\nWaiter: What can I get you?", "InteractionTree": "udef_q(x14,_tomato_n_1(x14),pronoun_q(x3,pron(x3),_a_q(x8,[_soup_n_1(x8), compound(e13,x8,x14)],_have_v_1(e2,x3,x8))))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "61d2c9e6-64e1-42a3-9914-7b44f37bec2c", "UserInput": "how much is soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 197, in generic_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "6bf6d2c3-ee55-4a9d-9f9f-354195fa57e4", "UserInput": "my son wants soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "7965167a-13e6-415c-8454-c618823d580b", "UserInput": "can you cancel the soup for my son?", "InteractionResponse": "Waiter: Sorry, I don't believe I have that order.\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,def_explicit_q(x17,pronoun_q(x23,pron(x23),[_son_n_of(x17,i28), poss(e22,x17,x23)]),[_soup_n_1(x11), _for_p(e16,x11,x17)]),pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _cancel_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "fc0a369b-1ccc-48e5-a417-7c050872c042", "UserInput": "we want soups", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),udef_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "83f3ef6a-cb89-4f5b-bdfc-dd8122f5e3d1", "UserInput": "can you cancel the soups?", "InteractionResponse": "Waiter: Sorry, I don't believe I have that order.\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,_soup_n_1(x11),pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _cancel_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "1a0f577d-8d9e-4ef1-bb23-799b6d2a6f58", "UserInput": "we want soups", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),udef_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "a78d6fee-afb5-4075-ac52-69c2cf5543ba", "UserInput": "can you cancel a soup?", "InteractionResponse": "Waiter: Sorry, I don't believe I have that order.\nWaiter: What can I get you?", "InteractionTree": "_a_q(x11,_soup_n_1(x11),pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _cancel_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "b43f0b8c-c373-4b88-8b54-4cfafd73873c", "UserInput": "can you cancel 2 soups", "InteractionResponse": "Waiter: Sorry, I don't believe I have that order.\nWaiter: What can I get you?", "InteractionTree": "udef_q(x11,[_soup_n_1(x11), card(2,e17,x11)],pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _cancel_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "ab0fa8c7-e4d4-46dd-9cdc-7da1e23a49d6", "UserInput": "my son wants soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "7dded3de-5d55-4ebb-a5eb-435e78a02406", "UserInput": "can you cancel the steak and the soup", "InteractionResponse": "Waiter: I have removed a steak from the order for you.\nWaiter: Sorry, I don't believe I have that order.\nWaiter: What can I get you?", "InteractionTree": "udef_q(x11,_the_q(x16,_steak_n_1(x16),_the_q(x21,_soup_n_1(x21),_and_c(x11,x16,x21))),pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _cancel_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "7b20bd4d-64a6-4f7a-b552-3a69d9f7b3c7", "UserInput": "how much is soup", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 197, in generic_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "5c47a154-cf8d-4855-9f39-8e3a52714e1a", "UserInput": "my son wants soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "cancel", "TestID": "dc3ddfbd-85a7-4de8-afe5-bc7e4a29e3eb", "UserInput": "can I cancel my son's soup'", "InteractionResponse": "Waiter: Sorry, I don't believe I have that order.\nWaiter: What can I get you?", "InteractionTree": "def_explicit_q(x13,pronoun_q(x18,pron(x18),[_son_n_of(x13,i23), poss(e17,x13,x18)]),def_explicit_q(x11,[_soup_n_1(x11), poss(e28,x11,x13)],pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _cancel_v_1_able(e2,x3,x11)])))"}
{"FolderName": "esl", "TestName": "count", "TestID": "fed26e8b-3635-4fe7-9c0e-a3bed7afe14c", "UserInput": "how much is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "count", "TestID": "d76232c5-713c-4697-8943-abf8c3a1a90d", "UserInput": "I want a soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_a_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "count", "TestID": "249bb4ea-e6d6-43e0-8b47-89b4707b7837", "UserInput": "how many soups did I order", "InteractionResponse": "you do not order soup\nWaiter: What can I get you?", "InteractionTree": "which_q(x9,abstr_deg(x9),pronoun_q(x3,pron(x3),count(e14,x9,x5,udef_q(x5,_soup_n_1(x5),_order_v_1(e2,x3,x5)))))"}
{"FolderName": "esl", "TestName": "count", "TestID": "46ea576a-5aea-4374-b2d8-2fd7816447f0", "UserInput": "I want a soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_a_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "count", "TestID": "594dff55-c9c3-4521-966c-ab306fd3bc41", "UserInput": "how many soups did I order", "InteractionResponse": "you do not order soup\nWaiter: What can I get you?", "InteractionTree": "which_q(x9,abstr_deg(x9),pronoun_q(x3,pron(x3),count(e14,x9,x5,udef_q(x5,_soup_n_1(x5),_order_v_1(e2,x3,x5)))))"}
{"FolderName": "esl", "TestName": "count", "TestID": "ef6b5235-1124-4bbd-8bd5-a4a9526e569d", "UserInput": "how much soup did I order", "InteractionResponse": "you do not order soup\nWaiter: What can I get you?", "InteractionTree": "which_q(x9,abstr_deg(x9),pronoun_q(x3,pron(x3),count(e14,x9,x5,udef_q(x5,_soup_n_1(x5),_order_v_1(e2,x3,x5)))))"}
{"FolderName": "esl", "TestName": "count", "TestID": "6d59232b-488b-4855-bcb8-e495df42f9d7", "UserInput": "My son wants the soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "count", "TestID": "c5732829-03b9-42d6-9f2b-d2f325fc2ccc", "UserInput": "how much soup did my son order", "InteractionResponse": "son do not order soup\nWaiter: What can I get you?", "InteractionTree": "which_q(x9,abstr_deg(x9),def_explicit_q(x3,pronoun_q(x21,pron(x21),[_son_n_of(x3,i26), poss(e20,x3,x21)]),count(e14,x9,x5,udef_q(x5,_soup_n_1(x5),_order_v_1(e2,x3,x5)))))"}
{"FolderName": "esl", "TestName": "for", "TestID": "64ef0380-b1b8-447b-83aa-d50e2f6a5aa4", "UserInput": "how much is the soup", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "for", "TestID": "a035f8a2-2719-4aed-a601-b96f384c8353", "UserInput": "I want a soup for my son", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "def_explicit_q(x14,pronoun_q(x20,pron(x20),[_son_n_of(x14,i25), poss(e19,x14,x20)]),pronoun_q(x3,pron(x3),_a_q(x8,[_soup_n_1(x8), _for_p(e13,x8,x14)],_want_v_1(e2,x3,x8))))"}
{"FolderName": "esl", "TestName": "for", "TestID": "4dfed0f9-2a16-497b-84f8-1c058055d68f", "UserInput": "I want a vegetarian dish for Johnny", "InteractionResponse": "Host: Sorry, I'm not sure which one you mean.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "proper_q(x16,named(Johnny,x16),pronoun_q(x3,pron(x3),_a_q(x8,[_dish_n_of(x8,i14), _for_p(e15,x8,x16), _vegetarian_a_1(e13,x8)],_want_v_1(e2,x3,x8))))"}
{"FolderName": "esl", "TestName": "for", "TestID": "5ee8de39-54cf-47b0-8a38-7dff509880c6", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "for", "TestID": "86ad8d69-a014-4e4a-9099-6c87bdd70156", "UserInput": "my steak is for 1", "InteractionResponse": "Yes, that is true.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "pronoun_q(x9,pron(x9),number_q(x14,card(1,x14,i20),def_explicit_q(x3,[_steak_n_1(x3), poss(e8,x3,x9)],_for_p(e2,x3,x14))))"}
{"FolderName": "esl", "TestName": "for", "TestID": "d3726b90-3af5-491e-8aab-521915ab8fb1", "UserInput": "my steak is for 3", "InteractionResponse": "Host: No that is not true\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "pronoun_q(x9,pron(x9),number_q(x14,card(3,x14,i20),def_explicit_q(x3,[_steak_n_1(x3), poss(e8,x3,x9)],_for_p(e2,x3,x14))))"}
{"FolderName": "esl", "TestName": "for", "TestID": "c78aeda0-1690-4e8f-b7fc-73aa0038c394", "UserInput": "who ordered soup?", "InteractionResponse": "No person ordered a soup\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "which_q(x3,person(x3),udef_q(x8,_soup_n_1(x8),_order_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "happypath", "TestID": "da4852a3-7b16-4669-8cef-8c0c6b05ce91", "UserInput": "how much is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "happypath", "TestID": "a988a546-6826-4dd8-848d-2c119ed7dd68", "UserInput": "i want the soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "happypath", "TestID": "09d6f18e-f3b2-4f22-ae96-bc9b6f500626", "UserInput": "the steak", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_the_q(x4,_steak_n_1(x4),unknown(e2,x4))"}
{"FolderName": "esl", "TestName": "happypath", "TestID": "ddb7c01a-a8c1-42af-9776-ffc933cb69d9", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "happypath", "TestID": "1108248a-eb0f-42cf-88d3-c93baa41a049", "UserInput": "check, please", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_please_a_1(i11,udef_q(x5,_check_n_of(x5,i10),unknown(e2,x5)))"}
{"FolderName": "esl", "TestName": "happypath", "TestID": "1b243ee9-08a0-4942-bc6f-d09ddd2e1856", "UserInput": "cash", "InteractionResponse": "Waiter: Sorry, I'm not sure what to do about that.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "udef_q(x4,_cash_n_1(x4),unknown(e2,x4))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "86599391-5eaa-4a47-b675-21e943e40e7d", "UserInput": "how much will the soup be?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "b9af4eb0-4d26-481a-82e4-9b97c1631251", "UserInput": "I want the soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "9fb0166e-c701-48d9-b056-c53a827981c3", "UserInput": "how much is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "e101dd32-e6b0-4c97-bdb6-282a28f39dfa", "UserInput": "I want the soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "3cf08778-3bbd-46b5-8aed-472b80b92b01", "UserInput": "my son wants the soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "b52783ed-8747-47bb-8887-781bdd132798", "UserInput": "what did I order?", "InteractionResponse": "you ordered nothing\nWaiter: What can I get you?", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x3,pron(x3),_order_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "8424d121-6c81-4bb3-a987-fb38d9335b73", "UserInput": "what did my son order?", "InteractionResponse": "son ordered nothing\nWaiter: What can I get you?", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x14,pron(x14),def_explicit_q(x3,[_son_n_of(x3,i19), poss(e13,x3,x14)],_order_v_1(e2,x3,x5))))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "93a49803-1e03-4f25-9aee-2efcd87e1fa0", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: What can I get you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "ecb032dd-3be2-4c8e-9b1c-1117b72f0554", "UserInput": "which dish do I have?", "InteractionResponse": "you do not have a dish\nWaiter: What can I get you?", "InteractionTree": "_which_q(x5,_dish_n_of(x5,i9),pronoun_q(x3,pron(x3),_have_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "348f9121-461a-4097-b2e3-f4411106f565", "UserInput": "I have the soup", "InteractionResponse": "you do not have the soup\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_soup_n_1(x8),_have_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "hasfood", "TestID": "ea373e12-c8aa-4509-b489-bfaa87c1c6b5", "UserInput": "which dish does my son have?", "InteractionResponse": "son do not have a dish\nWaiter: What can I get you?", "InteractionTree": "_which_q(x5,_dish_n_of(x5,i9),def_explicit_q(x3,pronoun_q(x15,pron(x15),[_son_n_of(x3,i20), poss(e14,x3,x15)]),_have_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "have", "TestID": "5228b43a-2306-4599-9955-09dbb3a7b2c1", "UserInput": "Do you have the table?", "InteractionResponse": "Yes.\nWaiter: Can I get you anything besides 2 steaks for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_table_n_1(x8),_have_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "lobby", "TestID": "59459548-126d-47bb-8e24-a1db2afcee0b", "UserInput": "how much is soup", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 197, in generic_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "lobby", "TestID": "c7cad26e-6c75-4c81-9e61-7da639e40e7e", "UserInput": "my son wants soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "lobby", "TestID": "149ba70d-2000-48e2-b4e8-b596db95ebc7", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "lobby", "TestID": "7c08c13f-cf87-4cf4-9dd3-3f6de2f50751", "UserInput": "can I get the bill?", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i16),pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _get_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "lobby", "TestID": "c783ebd9-c6df-4a31-a957-680bbfe53d1e", "UserInput": "cash", "InteractionResponse": "Waiter: Sorry, I'm not sure what to do about that.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "udef_q(x4,_cash_n_1(x4),unknown(e2,x4))"}
{"FolderName": "esl", "TestName": "menu", "TestID": "cd3a359d-3058-4020-8b8e-58b7f48fea10", "UserInput": "What isn't on the menu?", "InteractionResponse": "pork\nsoup\nsalad\nsteak\nchicken\nsalmon\nWaiter: What can I get you?", "InteractionTree": "which_q(x3,thing(x3),neg(e2,_the_q(x11,_menu_n_1(x11),_on_p_loc(e10,x3,x11))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "6d40569e-a739-43ef-a0c4-090e7b5f55b6", "UserInput": "and how much is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "e1240d1a-31dd-47cc-af00-bf2d0579b5c1", "UserInput": "how much is some soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 1934, in the_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "1cb2c6e6-bab2-40d7-84b3-70f090e25a74", "UserInput": "I want some soups", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: Can I get you anything besides a water, a menu, and a steak for you and a water and a menu for Johnny?", "InteractionTree": "pronoun_q(x3,pron(x3),_some_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "25fdf234-2ed3-435b-ab80-fb10e5389462", "UserInput": "What did I order?", "InteractionResponse": "water\nsteak\nmenu\nWaiter: Can I get you anything besides a water, a menu, and a steak for you and a water and a menu for Johnny?", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x3,pron(x3),_order_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "daf4a340-1126-4f27-b87c-233dd8d3ba17", "UserInput": "What did my son order?", "InteractionResponse": "water\nmenu\nWaiter: Can I get you anything besides a water, a menu, and a steak for you and a water and a menu for Johnny?", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x14,pron(x14),def_explicit_q(x3,[_son_n_of(x3,i19), poss(e13,x3,x14)],_order_v_1(e2,x3,x5))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "0c66d40d-000d-4f44-b15b-ec79e5bd018a", "UserInput": "How much is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "bf8680e8-0acf-42da-93c5-defa879f7f10", "UserInput": "How many dollars is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "5d7616ff-0fe6-482a-a57b-67ea07f9cf72", "UserInput": "How much is the salad?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "ae8dcc8e-316b-4754-8b00-81078a5f2c4b", "UserInput": "How much are the dishes?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "7a84fe83-a358-4884-932d-cf00e69eb5bb", "UserInput": "I would like the salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,_salad_n_1(x11),pronoun_q(x3,pron(x3),_want_v_1(e2,x3,x11)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "ad7a56d1-f75d-4cef-9649-99aa5aaae31d", "UserInput": "I would like the soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,_soup_n_1(x11),pronoun_q(x3,pron(x3),_want_v_1(e2,x3,x11)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "f04f7d4e-c918-4d46-81f0-a4bf4044dae4", "UserInput": "What did I order?", "InteractionResponse": "you ordered nothing\nWaiter: What can I get you?", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x3,pron(x3),_order_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "bd6b1750-5480-4661-a1d6-600bb7dbbc2a", "UserInput": "I ordered salad and soup", "InteractionResponse": "salad, soup (all together) are not ordered.\nWaiter: What can I get you?", "InteractionTree": "udef_q(x13,_salad_n_1(x13),udef_q(x18,_soup_n_1(x18),pronoun_q(x3,pron(x3),udef_q(x8,_and_c(x8,x13,x18),_order_v_1(e2,x3,x8)))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "c3b2b4ed-9938-468a-8567-250e7833d15f", "UserInput": "I ordered the soup", "InteractionResponse": "the soup is not ordered.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_soup_n_1(x8),_order_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "e13e91ec-7395-4c36-a509-3296ec3d427c", "UserInput": "How much are the dishes?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "ca595830-25f1-4b1b-a74e-3d47e4515acd", "UserInput": "How much are the specials?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "6085ec6b-9636-47db-bb63-03192fe8605f", "UserInput": "How much do the specials cost?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "888ee475-5cac-4f92-87b5-8a04d7b0fed0", "UserInput": "I want soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),udef_q(x8,_soup_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "6f10abe3-2b46-47fc-8fec-63bccadb36bb", "UserInput": "I want salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),udef_q(x8,_salad_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "59a2e11f-c5cd-4613-9628-7ffb6d53cee2", "UserInput": "I want pork", "InteractionResponse": "Son: Wait, let's not order pork before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),udef_q(x8,_pork_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "4adb123a-f0a5-47fc-8eb5-a58cf4a9cd81", "UserInput": "how much is soup", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 197, in generic_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "pay", "TestID": "f818e092-d5e9-4c93-8df6-4aa33ea933ca", "UserInput": "my son and I want soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x13,pron(x13),pronoun_q(x20,pron(x20),udef_q(x25,_soup_n_1(x25),udef_q(x3,def_explicit_q(x8,[_son_n_of(x8,i18), poss(e12,x8,x13)],_and_c(x3,x8,x20)),_want_v_1(e2,x3,x25)))))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "dd9e2da0-7e00-4c07-aed9-92117eea2446", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: What can I get you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "1056e782-59cc-4f06-959a-e33ef890fc8e", "UserInput": "Can we pay?", "InteractionResponse": "Waiter: But... you haven't got any food yet!\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _pay_v_for_request(e2,x3,i11,i12)])"}
{"FolderName": "esl", "TestName": "pay", "TestID": "c0e0a372-60d8-4d43-8462-550acc3ae5e2", "UserInput": "how much is the salad", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "pay", "TestID": "563a8c08-9e38-4b8b-b057-80fd366d873a", "UserInput": "my son wants the salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: Can I get you anything besides a menu for you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_salad_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "23b571c9-6022-4fb7-a85c-8b693d85bf8b", "UserInput": "I want the steak", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_steak_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "1261d537-a6c5-4a04-87dc-3e5552eeb4d0", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "76892157-de31-423b-9717-632e623b2316", "UserInput": "I'm ready for the bill", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_the_q(x9,_bill_n_of(x9,i14),pronoun_q(x3,pron(x3),_want_v_1(e2,x3,x9)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "6c1cee67-7ba6-49ca-9903-6c339f559e4a", "UserInput": "We're ready to pay", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,i11,i12))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "d9151661-b0ee-4e2c-9aee-b675f4ad2dd2", "UserInput": "I'm ready to pay", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,i11,i12))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "5a8d1551-6c90-4e4a-bbe6-6a7a1ef6e477", "UserInput": "I'm ready to pay the bill", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "75c4163a-45f2-47f4-8350-92983dccb0cf", "UserInput": "I'm ready to pay my son", "InteractionResponse": "You can't pay for that.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "def_explicit_q(x11,pronoun_q(x18,pron(x18),[_son_n_of(x11,i23), poss(e17,x11,x18)]),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "f45f8cdf-ae81-4832-83a6-94041d5c09cd", "UserInput": "Can I pay the bill", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "44f9aabd-a5bf-4ccd-9020-5a7c47801c3d", "UserInput": "Who can pay the bill", "InteractionResponse": "you\n(among others)\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "which_q(x3,person(x3),_the_q(x11,_bill_n_of(x11,i17),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "efb15731-65f2-46d7-988e-f88c537cfc2f", "UserInput": "What can I pay?", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x5,i16)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "42f554ad-0208-4bef-aad8-7171f8e5cbdd", "UserInput": "I want to pay the bill", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "d059492d-e95d-4ec7-a6bb-15d25f2d7601", "UserInput": "can I get the check?", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_the_q(x11,_check_n_of(x11,i16),pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _get_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "5b476cfb-4422-484b-a983-61ead97e2fbe", "UserInput": "I want to pay with a card", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_a_q(x14,_card_n_1(x14),pronoun_q(x3,pron(x3),[_with_p(e13,e2,x14), _pay_v_for_request(e2,x3,i11,i12)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "54deedbd-3254-4d86-8f1d-6c86a4032bea", "UserInput": "can I pay with a card?", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_a_q(x14,_card_n_1(x14),pronoun_q(x3,pron(x3),[_with_p(e13,e10,x14), event_replace(u99,e2,e10), _pay_v_for_request(e2,x3,i11,i12)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "5dbbce66-c57c-4e82-af30-a3db81744cde", "UserInput": "I will pay with my card", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "def_explicit_q(x11,pronoun_q(x17,pron(x17),[_card_n_1(x11), poss(e16,x11,x17)]),pronoun_q(x3,pron(x3),[_with_p(e10,e2,x11), _pay_v_for(e2,x3,i8,i9)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "1743ad85-9bd8-4c96-afa5-b25443b3521f", "UserInput": "I want to pay the bill with a card", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i18),_a_q(x20,_card_n_1(x20),pronoun_q(x3,pron(x3),[_with_p(e19,e2,x20), _pay_v_for_request(e2,x11,i12,i13)])))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "35300d37-33ae-42eb-b8c8-f6945a26647e", "UserInput": "could I pay with a card?", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "_a_q(x14,_card_n_1(x14),pronoun_q(x3,pron(x3),[_with_p(e13,e10,x14), event_replace(u99,e2,e10), _pay_v_for_request(e2,x3,i11,i12)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "03831612-cfaa-4d2f-b5c7-c0e6a5dfc7aa", "UserInput": "I want to pay with cash", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "udef_q(x14,_cash_n_1(x14),pronoun_q(x3,pron(x3),[_with_p(e13,e2,x14), _pay_v_for_request(e2,x3,i11,i12)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "0ab15121-4562-41e8-a801-ade74322a3a8", "UserInput": "a table for 2", "InteractionResponse": "Waiter: Um... You're at a table.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "number_q(x10,card(2,x10,i16),_a_q(x4,[_table_n_1(x4), _for_p(e9,x4,x10)],unknown(e2,x4)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "f8286eeb-127d-49d6-b143-e7ed95108b98", "UserInput": "how much is the salad", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "pay", "TestID": "b32a6be3-b68b-4505-9464-4921365907a3", "UserInput": "my son wants the salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: Can I get you anything besides a menu and a steak for you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_salad_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "1f787d78-f9ec-4b39-bf9b-9966bb9cd689", "UserInput": "I want the steak", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides a menu and 2 steaks for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_steak_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "79e13a5a-add9-4b25-8ab8-f63c84a5d5f2", "UserInput": "no", "InteractionResponse": "Johnny: Dad! I\u2019m vegetarian, remember?? Why did you only order meat? \nMaybe they have some other dishes that aren\u2019t on the menu? \nYou tell the waiter to ignore what you just ordered.\nWaiter: What can I get you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "6a1d167e-209a-4b8a-b9d9-589a68beaa26", "UserInput": "Can I pay the bill", "InteractionResponse": "Waiter: But... you haven't got any food yet!\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "e5ae3021-f61e-44c2-88c9-985e50ab51b4", "UserInput": "can I pay with cash?", "InteractionResponse": "Waiter: But... you haven't got any food yet!\nWaiter: What can I get you?", "InteractionTree": "udef_q(x14,_cash_n_1(x14),pronoun_q(x3,pron(x3),[_with_p(e13,e10,x14), event_replace(u99,e2,e10), _pay_v_for_request(e2,x3,i11,i12)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "2ce0c9fb-5ab5-4db2-aeec-759b89a62197", "UserInput": "a table for 2", "InteractionResponse": "Waiter: Um... You're at a table.\nWaiter: What can I get you?", "InteractionTree": "number_q(x10,card(2,x10,i16),_a_q(x4,[_table_n_1(x4), _for_p(e9,x4,x10)],unknown(e2,x4)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "6e471301-d41c-4447-8b3e-3339dd712c26", "UserInput": "how much is the salad", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "pay", "TestID": "2034cedd-db4a-4094-bc66-bcc7f48d3168", "UserInput": "my son wants the salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_salad_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "ca69ff40-c67d-44e6-a758-260363757474", "UserInput": "I want the steak", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_steak_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "eb50592b-dcc7-4495-ba6a-1af2700f0819", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "77d7aab4-ffd2-4c67-90b3-6fcc9c0695a8", "UserInput": "Can I pay the bill", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "af9bf474-7a7b-43e1-a979-6773dd735457", "UserInput": "I will pay with cash", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "udef_q(x11,_cash_n_1(x11),pronoun_q(x3,pron(x3),[_with_p(e10,e2,x11), _pay_v_for(e2,x3,i8,i9)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "56842892-f105-466b-b721-d3e9ee198978", "UserInput": "a table for 2", "InteractionResponse": "Waiter: Um... You're at a table.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "number_q(x10,card(2,x10,i16),_a_q(x4,[_table_n_1(x4), _for_p(e9,x4,x10)],unknown(e2,x4)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "42722115-fb5e-42be-9777-eb7d1fc495fb", "UserInput": "how much is the salad", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "pay", "TestID": "b3e750e7-1d4e-446d-a518-c51b0aee5314", "UserInput": "my son wants the salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_salad_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "ce6eb404-69f9-4b93-a8a7-38407c16209a", "UserInput": "I want the steak", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides 2 steaks for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_steak_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "65ef4087-be4e-4017-b18b-b346dd1e457d", "UserInput": "no", "InteractionResponse": "Johnny: Dad! I\u2019m vegetarian, remember?? Why did you only order meat? \nMaybe they have some other dishes that aren\u2019t on the menu? \nYou tell the waiter to ignore what you just ordered.\nWaiter: What can I get you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "d1cb1963-f3f3-4a4f-b6f2-b5c2ec8e72e0", "UserInput": "Can I pay the bill", "InteractionResponse": "Waiter: But... you haven't got any food yet!\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "64e3beac-7292-47e7-840b-7b29471546c5", "UserInput": "I want to pay the bill with cash", "InteractionResponse": "Waiter: But... you haven't got any food yet!\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i18),udef_q(x20,_cash_n_1(x20),pronoun_q(x3,pron(x3),[_with_p(e19,e2,x20), _pay_v_for_request(e2,x11,i12,i13)])))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "be37a66a-516e-4cb7-82e3-94b950c4f151", "UserInput": "a table for 2", "InteractionResponse": "Waiter: Um... You're at a table.\nWaiter: What can I get you?", "InteractionTree": "number_q(x10,card(2,x10,i16),_a_q(x4,[_table_n_1(x4), _for_p(e9,x4,x10)],unknown(e2,x4)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "d61d6cd0-d604-479f-82a9-86e253eb9c86", "UserInput": "how much is the salad", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "pay", "TestID": "98f02d54-cfbf-4f31-a3f1-bcbb4c6c13bd", "UserInput": "my son wants the salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_salad_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "b0326d50-039d-4531-b1df-4141c5505e27", "UserInput": "I want the steak", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_steak_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "9ceae3b0-240a-4245-98e7-cd76dfb02a64", "UserInput": "no", "InteractionResponse": "You realize that you'll need at least two dishes for the two of you.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "4ca3f93b-d85b-4311-b089-a9900ee3a386", "UserInput": "Can I pay the bill", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "0d2939c4-874d-43a6-86ab-91767ac33a20", "UserInput": "could I pay with cash?", "InteractionResponse": "Waiter: Let's finish up this order before we get your bill.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "udef_q(x14,_cash_n_1(x14),pronoun_q(x3,pron(x3),[_with_p(e13,e10,x14), event_replace(u99,e2,e10), _pay_v_for_request(e2,x3,i11,i12)]))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "833710c0-45c2-4548-8f16-b58fff3d8b96", "UserInput": "a table for 2", "InteractionResponse": "Waiter: Um... You're at a table.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "number_q(x10,card(2,x10,i16),_a_q(x4,[_table_n_1(x4), _for_p(e9,x4,x10)],unknown(e2,x4)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "1517b17a-adb5-4fde-b599-f6c60c2efa81", "UserInput": "how much is the salad", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "pay", "TestID": "b414bd8d-afa1-4bd1-9853-55698ecfa16c", "UserInput": "my son wants the salad", "InteractionResponse": "Son: Wait, let's not order salad before we know how much it costs.\nWaiter: Can I get you anything besides a steak for you?", "InteractionTree": "pronoun_q(x9,pron(x9),_the_q(x15,_salad_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "2a14a5b6-af57-413c-81fb-cc700d4b1620", "UserInput": "I want the steak", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides 2 steaks for you?", "InteractionTree": "pronoun_q(x3,pron(x3),_the_q(x8,_steak_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "f0771826-819a-469b-b162-9eb410d13422", "UserInput": "no", "InteractionResponse": "Johnny: Dad! I\u2019m vegetarian, remember?? Why did you only order meat? \nMaybe they have some other dishes that aren\u2019t on the menu? \nYou tell the waiter to ignore what you just ordered.\nWaiter: What can I get you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "b7b72945-91ca-4ef3-b21e-e0397d50ab5f", "UserInput": "Can I pay the bill", "InteractionResponse": "Waiter: But... you haven't got any food yet!\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,_bill_n_of(x11,i17),pronoun_q(x3,pron(x3),_pay_v_for_request(e2,x3,x11,i12)))"}
{"FolderName": "esl", "TestName": "pay", "TestID": "5cfabc0b-2add-4936-b68d-273154204a19", "UserInput": "We'll pay with cash", "InteractionResponse": "Waiter: But... you haven't got any food yet!\nWaiter: What can I get you?", "InteractionTree": "udef_q(x11,_cash_n_1(x11),pronoun_q(x3,pron(x3),[_with_p(e10,e2,x11), _pay_v_for(e2,x3,i8,i9)]))"}
{"FolderName": "esl", "TestName": "qa", "TestID": "36d590b3-0f4d-4bc2-958e-33fc650e9a12", "UserInput": "how much is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "qa", "TestID": "475bb0be-38e8-4ac5-b9c1-d4822dafa8b8", "UserInput": "how much is the soup?", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "reset", "TestID": "c1d523ec-7a6e-4477-95c4-a90161b3c98f", "UserInput": "how much is the soup", "InteractionResponse": "**** HALTING: Exception in test run: 'NoneType' object has no attribute 'next_solution_in_group'\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 465, in _interact_once\n    for tree_record in tree_solver.tree_solutions(frame_state,\n  File \"/perplexity/execution.py\", line 560, in tree_solutions\n    tree_record[\"SolutionGroupGenerator\"] = at_least_one_generator(\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/solution_groups.py\", line 234, in solution_groups\n    solutions = at_least_one_generator(solutions_orig)\n  File \"/perplexity/utilities.py\", line 221, in at_least_one_generator\n    first_item = next(generator)\n  File \"/perplexity/execution.py\", line 388, in __next__\n    return self.lineage_generator._next_solution()\n  File \"/perplexity/execution.py\", line 453, in _next_solution\n    solution = next(self.solution_generator)\n  File \"/perplexity/execution.py\", line 167, in solve_tree_interpretation\n    for solution in clear_error_when_yield_generator(self, self.call(state.set_x(\"tree\", (tree_info,), False), tree_info[\"Tree\"])):\n  File \"/perplexity/execution.py\", line 25, in clear_error_when_yield_generator\n    for next_value in generator:\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 178, in which_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/perplexity/system_vocabulary.py\", line 133, in the_all_q\n    yield from quantifier_raw(context, state, x_variable_binding, h_rstr, h_body)\n  File \"/perplexity/system_vocabulary.py\", line 77, in quantifier_raw\n    for body_solution in context.call(alternative_state, h_body):\n  File \"/perplexity/execution.py\", line 279, in call\n    yield from self._call_predication(state, term)\n  File \"/perplexity/execution.py\", line 336, in _call_predication\n    for next_state in function(*function_args):\n  File \"/perplexity/vocabulary.py\", line 608, in wrapper_function\n    yield from function_to_decorate(*args, **kwargs)\n  File \"/samples/esl/tutorial.py\", line 929, in count\n    for solution_state in maximal_group:\n  File \"/perplexity/solution_groups.py\", line 52, in __next__\n    if not self.solution_group_generator.next_solution_in_group(self.group_id):\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "reset", "TestID": "c34d8395-d3a2-45d8-8564-e17f9e14f693", "UserInput": "my son wants soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "reset", "TestID": "5865b8ea-3730-4e7e-9f0c-ad8fcd9efd0a", "UserInput": "I want chicken", "InteractionResponse": "Waiter: chicken is an excellent choice!\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "pronoun_q(x3,pron(x3),udef_q(x8,_chicken_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "reset", "TestID": "f13adba2-77f5-4c66-8a56-31ba14ec0b26", "UserInput": "what did we order", "InteractionResponse": "Less than 2 people did that.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x3,pron(x3),_order_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "reset", "TestID": "cd90a597-6821-45fb-b65c-564157c4597c", "UserInput": "my son wants soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "reset", "TestID": "8df1861a-c314-4cf0-baec-47b6e5afcab9", "UserInput": "my son wants soup", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_soup_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_want_v_1(e2,x3,x15))))"}
{"FolderName": "esl", "TestName": "reset", "TestID": "d84c6a2c-4283-454e-80f1-612d9a3d65c9", "UserInput": "I want chicken", "InteractionResponse": "Waiter: chicken is an excellent choice!\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "pronoun_q(x3,pron(x3),udef_q(x8,_chicken_n_1(x8),_want_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "table", "TestID": "632ad72d-0a73-4c39-8bac-b3300fb1db78", "UserInput": "let's eat", "InteractionResponse": "**** HALTING: Exception in test run: list index out of range\n  File \"/perplexity/test_manager.py\", line 201, in run_tests\n    interaction_records = test_ui.interact_once_across_conjunctions(test_item[\"Command\"])\n  File \"/perplexity/user_interface.py\", line 244, in interact_once_across_conjunctions\n    self._interact_once(force_input=sentence,\n  File \"/perplexity/user_interface.py\", line 525, in _interact_once\n    solution_group_solutions = [solution for solution in solution_group]\n  File \"/perplexity/user_interface.py\", line 525, in <listcomp>\n    solution_group_solutions = [solution for solution in solution_group]\n  File \"/perplexity/solution_groups.py\", line 58, in __next__\n    return self.group_list[self.last_yielded_index]\n", "InteractionTree": "None"}
{"FolderName": "esl", "TestName": "vegetarian", "TestID": "37e73c8f-ea36-4f95-8afc-7efa06823a41", "UserInput": "which vegetarian menu items do you have?", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "_which_q(x5,udef_q(x11,_menu_n_1(x11),[_thing_n_of-about(x5,i16), compound(e10,x5,x11), _vegetarian_a_1(e9,x5)]),pronoun_q(x3,pron(x3),_have_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "vegetarian", "TestID": "bad3cea5-19d2-4c65-868d-a95e425861f6", "UserInput": "which vegetarian menu choices do you have?", "InteractionResponse": "Son: Wait, let's not order soup before we know how much it costs.\nWaiter: What can I get you?", "InteractionTree": "_which_q(x5,udef_q(x11,_menu_n_1(x11),[_dish_n_of(x5,i16), compound(e10,x5,x11), _vegetarian_a_1(e9,x5)]),pronoun_q(x3,pron(x3),_have_v_1(e2,x3,x5)))"}
