{"FolderName": "esl", "TestName": "cancel", "TestID": "342daede-7db9-493b-9481-3be490fbfbeb", "UserInput": "Can I cancel the order for me", "InteractionResponse": "Waiter: Sorry, I don't believe there is an order for you.\nWaiter: Sorry, I don't believe there is an order for Johnny.\nWaiter: Sorry, I don't believe there is an order for you and Johnny together.\nWaiter: What can I get you?", "InteractionTree": "_the_q(x11,pronoun_q(x17,pron(x17),[_order_n_of(x11), _for_p(e16,x11,x17)]),pronoun_q(x3,pron(x3),[event_replace(u99,e2,e10), _cancel_v_1_able(e2,x3,x11)]))"}
{"FolderName": "esl", "TestName": "for", "TestID": "a035f8a2-2719-4aed-a601-b96f384c8353", "UserInput": "I want a soup for my son", "InteractionResponse": "Waiter: soup is an excellent choice!\nWaiter: Can I get you anything besides a steak and a soup for you?", "InteractionTree": "def_explicit_q(x14,pronoun_q(x20,pron(x20),[_son_n_of(x14,i25), poss(e19,x14,x20)]),pronoun_q(x3,pron(x3),_a_q(x8,[_soup_n_1(x8), _for_p(e13,x8,x14)],_want_v_1(e2,x3,x8))))"}
{"FolderName": "esl", "TestName": "for", "TestID": "da6923a2-db45-44d0-88a8-cf0e842f12c5", "UserInput": "I want a vegetarian dish for Johnny", "InteractionResponse": "Host: Sorry, I'm not sure which one you mean.\nWaiter: Can I get you anything besides a steak and a soup for you?", "InteractionTree": "proper_q(x16,named(Johnny,x16),pronoun_q(x3,pron(x3),_a_q(x8,[_dish_n_of(x8,i14), _for_p(e15,x8,x16), _vegetarian_a_1(e13,x8)],_want_v_1(e2,x3,x8))))"}
{"FolderName": "esl", "TestName": "for", "TestID": "5ee8de39-54cf-47b0-8a38-7dff509880c6", "UserInput": "no", "InteractionResponse": "Waiter: I'll be right back!\nA few minutes go by and the waiter returns.\nWaiter: Here is a steak and soup for you.\nThe food is good, but nothing extraordinary.\nWaiter: What can I get you?", "InteractionTree": "_no_a_1(i6,unknown(e2,u5))"}
{"FolderName": "esl", "TestName": "for", "TestID": "c78aeda0-1690-4e8f-b7fc-73aa0038c394", "UserInput": "who ordered soup?", "InteractionResponse": "you", "InteractionTree": "which_q(x3,person(x3),udef_q(x8,_soup_n_1(x8),_order_v_1(e2,x3,x8)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "3c03fc87-432d-4481-b06b-1efa3defa634", "UserInput": "for my son, I'll have the roasted chicken", "InteractionResponse": "Waiter: chicken is an excellent choice!\nWaiter: Can I get you anything besides a chicken for you?", "InteractionTree": "pronoun_q(x11,pron(x11),pronoun_q(x3,pron(x3),_the_q(x21,[_chicken_n_1(x21), _roast_v_cause(e26,i27,x21)],def_explicit_q(x5,[_son_n_of(x5,i16), poss(e10,x5,x11)],[_for_p(e4,e2,x5), _have_v_1(e2,x3,x21)]))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "c8ec9537-7d43-4110-9600-650930b1e87f", "UserInput": "for my son, please get the salmon", "InteractionResponse": "Waiter: salmon is an excellent choice!\nWaiter: Can I get you anything besides a chicken and a salmon for you?", "InteractionTree": "pronoun_q(x11,pron(x11),pronoun_q(x3,pron(x3),_the_q(x23,_salmon_n_1(x23),def_explicit_q(x5,[_son_n_of(x5,i16), poss(e10,x5,x11)],[polite(please,i18,e2), _for_p(e4,e2,x5), _get_v_1(e2,x3,x23)]))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "3e8edf8d-ab16-4c70-a35b-9976843a11e3", "UserInput": "what is Johnny's order?", "InteractionResponse": "Nothing", "InteractionTree": "which_q(x5,thing(x5),def_explicit_q(x3,proper_q(x10,named(Johnny,x10),[_order_n_of(x3), poss(e19,x3,x10)]),_be_v_id(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "99b1429b-cf55-4ca0-a26b-3748fcff3358", "UserInput": "get a steak for my son", "InteractionResponse": "Waiter: steak is an excellent choice!\nWaiter: Can I get you anything besides a chicken and a steak for you?", "InteractionTree": "def_explicit_q(x14,pronoun_q(x20,pron(x20),[_son_n_of(x14,i25), poss(e19,x14,x20)]),pronoun_q(x3,pron(x3),_a_q(x8,[_steak_n_1(x8), _for_p(e13,x8,x14)],_get_v_1(e2,x3,x8))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "a267e43b-17ce-4e94-a258-96cdf2e20b7a", "UserInput": "My order is chicken", "InteractionResponse": "you do not have order", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x14,_chicken_n_1(x14),def_explicit_q(x3,[_order_n_of(x3), poss(e8,x3,x9)],_be_v_id(e2,x3,x14))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "9f85cd3c-3ef6-4776-a0eb-eea2c3704c39", "UserInput": "My son's order is steak", "InteractionResponse": "Nothing", "InteractionTree": "pronoun_q(x10,pron(x10),def_explicit_q(x3,def_explicit_q(x5,[_son_n_of(x5,i15), poss(e9,x5,x10)],[_order_n_of(x3), poss(e20,x3,x5)]),udef_q(x21,_steak_n_1(x21),_be_v_id(e2,x3,x21))))"}
{"FolderName": "esl", "TestName": "ordering", "TestID": "e22dfd49-438f-46a2-98ad-30c4be9da431", "UserInput": "What did we order?", "InteractionResponse": "Less than 2 people did that.", "InteractionTree": "which_q(x5,thing(x5),pronoun_q(x3,pron(x3),_order_v_1(e2,x3,x5)))"}
{"FolderName": "esl", "TestName": "table", "TestID": "e300aab3-42ec-4e9a-9881-dba6b7fe84a5", "UserInput": "Hi, I'd love to have a table for 2, please", "InteractionResponse": "Yes, that is true.", "InteractionTree": "discourse(i2,greet(hi,i6),_please_a_1(i33,_a_q(x20,number_q(x26,card(2,x26,i32),[_table_n_1(x20), _for_p(e25,x20,x26)]),pronoun_q(x3,pron(x3),_have_v_1_request(e13,x3,x20)))))"}
{"FolderName": "esl", "TestName": "table", "TestID": "d078a2ea-e17c-44c5-9110-2600cea1e097", "UserInput": "2", "InteractionResponse": "Host: Perfect! Please come right this way. The host shows you to a wooden table with a checkered tablecloth. A minute goes by, then your waiter arrives.\nWaiter: Hi there!\nWaiter: What can I get you?", "InteractionTree": "number_q(x4,card(2,x4,i10),unknown(e2,x4))"}
{"FolderName": "esl", "TestName": "water", "TestID": "cb15454a-2a0f-4080-a4f2-654ad1524068", "UserInput": "my son has water", "InteractionResponse": "son do not have water", "InteractionTree": "pronoun_q(x9,pron(x9),udef_q(x15,_water_n_1(x15),def_explicit_q(x3,[_son_n_of(x3,i14), poss(e8,x3,x9)],_have_v_1(e2,x3,x15))))"}
